(: Example from http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.148.5309&rep=rep1&type=pdf :)
(: source type:                                                                                     :)
(:  dblp[inproceeding[key,title,year]*,person[pid,name]*,author[key,pid]*,cite[key,citation]*]      :)
(:  												    :)
(: view type:											    :)
(:  dblp[inproceedings[title,year,author[name]*,cite[title]*]*]					    :)
(: =================================================================================================:)
(: not tested ! :)


nextKey() = REPLACE IN $next AS doc('state.xml')/state/next-key WITH $next + 1
nextPId() = REPLACE IN $next AS doc('state.xml')/state/next-pid WITH $next + 1

UPDATE $st AS doc('state.xml')/state BY					// What about using an external file to store the state? May be useful for handling key generation as in here
{
	LET maxkey := max(doc("s.xml")/dblp/inproceedings/key) IN
	INSERT INTO next-key VALUE maxkey + 1
;	LET maxpid := max(doc("s.xml")/dblp/person/pid) IN
	INSERT INTO next-pid VALUE maxkey + 1
}
;
UPDATE $dblp AS doc("s.xml")/dblp BY
{
	REPLACE SOURCE . WITH $dblp
;	updatePapers($dblp,$vdblp)
;	updateCitations($dblp,$vdblp)		//citations may refer to newly created inproceedings keys, so we must do it in a second pass
}
FOR VIEW $vdblp AS doc("v.xml")/dblp

updatePapers($dblp,$vdblp) = 
UPDATE $paper AS $dblp/inproceedings BY		//update papers
{
	DELETE SOURCE
|	{
		INSERT SOURCE VALUE	<inproceedings>
								<key>{doc('state.xml')/state/next-key}</key>
								<title>{$vpaper/title}</title>
								<year>{$vpaper/year}</year>
								</inproceedings>
	;	nextKey()
	|	REPLACE SOURCE . WITH $paper
	}
	;	updateKeyAuthors($paper/key,$dblp,$vpaper)
}
FOR VIEW $vpaper AS $vdblp/inproceedings
MATCHING BY title

updateKeyAuthors($key,$dblp,$vpaper) = 					//add the authors of a particular paper to the source
UPDATE $author AS $dblp/authors[key=$key] BY
{
	DELETE SOURCE
|	LET $nextpid := doc('state.xml')/state/next-pid IN
	INSERT SOURCE VALUE	<author>
							<key>{$key}</key>
							<pid>{$nextpid}</pid>
						</author>
;	INSERT INTO $dblp/person AS LAST	<person>		//we also need to add authors as new people if they don't exist
											<pid>{$nextpid}</pid>
											<name>{$vauthor/name}</name>
										</person>
;	nextPId()
|	REPLACE SOURCE . WITH $author
}
FOR VIEW $vauthor AS $vpaper/author	
MATCHING SOURCE BY $dblp/person[pid=$author/pid]/name VIEW BY name

updateCitations($dblp,$vdblp) = 
UPDATE $paper AS $dblp/inproceedings BY		//update citations
{
	REPLACE SOURCE . WITH $paper; updateKeyCitations($paper/key,$dblp,$vpaper)
}
FOR VIEW $vpaper AS $vdblp/inproceedings
MATCHING BY title

updateKeyCitations($key,$dblp,$vpaper) =
UPDATE $cite AS $dblp/cite[key=$key] BY
{
	DELETE SOURCE
|	LET $newcitation := $dblp/inproceedings[title=$vcite/title][1]
	INSERT SOURCE VALUE	<cite>
							<key>{$key}</key>
							<citation>{$newcitation/key}</citation>
						</cite>
	WHERE nonempty($newcitation)
|	REPLACE SOURCE . WITH $author
}
FOR VIEW $vcite AS $vpaper/cite
MATCHING SOURCE BY $dblp/inproceedings[key=$cite/citation]/title VIEW BY title
	
	
	
	
	
	
	
