<mainclass name="UnboundedStack" public="true">
	<!-- Describes the interface of the component, and of the states.
	     parameters are abstracted, so you need to care about method names only -->
	<interface name="State" private="true">
		<methoddecl name="pop" type="void" />
	</interface>

        <constructor>
	  <code>
	    <!-- there might be more code here -->
		<if>

			<condition>
			  s111 
			</condition>
			<code>
			  <assignment>
			      <left>state</left>
			      <right>S1</right>
			    </assignment>
			</code>
		</if>
	  </code>
	</constructor>

	<!-- Representation types, fields do not exist in the model -->
	<field name="rep" type="List&lt;Object&gt;" final="true"/>

	<!-- this is always required to exist, but it is abstracted. 
		 Consider it as a requirement for intra-model consistency -->
	<field name="state" type="State" final="true">
		<init>S0</init>
	</field>
	<field name="S0" type="State" final="true">
	</field>

	<class name="S0" implements="State" public="false"
		private="true">
		
		<method name="size" public="true" type="int">
			<code/>
		</method>

	</class>

</mainclass>
