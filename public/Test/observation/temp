import "code.dtd" as s
import "model.dtd" as v

$source   = doc('s.xml')
$view     = doc('v.xml')
START     = uReths($source/reths, $view/observs)

PROCEDURE uReths(source $reths AS s:reths, $observs AS v:observs) = 
LET $return := $reths/if[code[return[String]]] IN
LET $throw := $reths/if[code[throw[String]]] IN
LET observs[$normal AS v:normal?, $exceps AS v:exceptional*] := $observs IN
  uReturn($return, $normal);  uThrow($throw, $exceps)

PROCEDURE uReturn(source $return AS s:if?, view $normal AS v:normal?) =
UPDATE $if IN $observation BY
{
 MATCH -> {}
| UNMATCHV -> CREATE VALUE 
                    <if>
		       <condition/>
		       <code>
                         <return>$returnName</return>
		       </code>
                    </if>
}
FOR VIEW normal[@return[$returnName AS String]] IN $normal
MATCHING SOURCE BY $if/code/return/text()  VIEW BY $returnName

PROCEDURE uThrow(source $throw AS s:if*, view $exceps AS v:exceptional* ) =
UPDATE if[s:condition, code[throw[$tName AS String]]] IN $observation BY
{
 MATCH -> {}
| UNMATCHV -> CREATE VALUE
                    <if>
		       <condition/>
		       <code>
                         <throw> $excepName </throw>
		       </code>
                    </if>
}
FOR VIEW exceptional[$excepName AS @name[String]] IN $exceps
MATCHING SOURCE BY $tName VIEW BY $excepName
